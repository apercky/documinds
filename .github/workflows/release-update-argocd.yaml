name: Update ArgoCD Deployment

on:
  release:
    types: [published]

jobs:
  update-deployment:
    runs-on: ubuntu-latest

    steps:
      # Determine the version and the target branch
      - name: Imposta versione e branch target
        run: |
          VERSION="${{ github.event.release.tag_name }}"
          echo "VERSION=$VERSION" >> "$GITHUB_ENV"

          if [[ "$VERSION" == *"-beta."* ]]; then
            echo "TARGET_BRANCH=develop" >> "$GITHUB_ENV"
          else
            echo "TARGET_BRANCH=main" >> "$GITHUB_ENV"
          fi

      # Checkout the current repository
      - name: Checkout codice (repo current)
        uses: actions/checkout@v4
        with:
          persist-credentials: false  # ðŸ‘ˆ questo Ã¨ fondamentale! GitHub Actions per default fa il checkout shallow, con --depth=1, e questo tronca la cronologia.

      # Clone the ArgoCD repository
      - name: Clona repo ArgoCD
        env:
          PAT_GITHUB: ${{ secrets.PAT_GITHUB }}
        run: |
          git clone https://x-access-token:${PAT_GITHUB}@github.com/apercky/documinds-argocd.git
          cd documinds-argocd
          git checkout "$TARGET_BRANCH"

      # Update the version patch file
      - name: Aggiorna version patch
        run: |
          cd documinds-argocd
          
          # Costruisce il percorso del file in base al branch
          if [[ "$TARGET_BRANCH" == "develop" ]]; then
            PATCH_FILE="clusters/dev/documinds/documinds-version-patch.yaml"
          else
            PATCH_FILE="clusters/prod/documinds/documinds-version-patch.yaml"
          fi
          
          # Aggiorna il valore dell'annotation deployment.version
          sed -i "s|deployment.version: \".*\"|deployment.version: \"${VERSION}\"|" "$PATCH_FILE"

      # Commit and push the changes
      - name: Commit e push modifiche
        run: |
          cd documinds-argocd
          git config user.name "CI Bot"
          git config user.email "ci@apercky.dev"
          git commit -am "chore(deploy): aggiornata immagine a ${VERSION}"
          git push origin "$TARGET_BRANCH"
