---
    name: Release
    
    on:
      push:
        branches:
          - main
          - develop
    
    jobs:
      release:
        runs-on: ubuntu-latest
    
        steps:
          - name: Checkout con credenziali disabilitate
            uses: actions/checkout@v4
            with:
              persist-credentials: false  # impedisce l'uso del GITHUB_TOKEN di default
              fetch-depth: 0  # ðŸ‘ˆ questo Ã¨ fondamentale! GitHub Actions per default fa il checkout shallow, con --depth=1, e questo tronca la cronologia.
    
          - name: Setup Git + forzatura remote
            run: |
              git config --global user.name "ci-bot"
              git config --global user.email "ci-bot@apercky.dev"
              git remote set-url origin https://x-access-token:${{ secrets.PAT_GITHUB }}@github.com/apercky/documinds.git
    
          - name: Setup Node
            uses: actions/setup-node@v4
            with:
              node-version: '20'
              cache: 'npm'
    
          - name: Install dependencies
            run: npm ci
    
          - name: Semantic Release
            env:
              GITHUB_TOKEN: ${{ secrets.PAT_GITHUB }}
            run: npx semantic-release
    
          # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Nuovi passi per abilitare QEMU + Buildx multi-arch â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
          - name: Setup QEMU
            uses: docker/setup-qemu-action@v3
    
          - name: Setup Docker Buildx
            uses: docker/setup-buildx-action@v3
            with:
              driver: docker-container
    
          # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Fine nuovi passi â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    
          - name: Build and Push Docker Image
            env:
              GHCR_TOKEN: ${{ secrets.PAT_GITHUB }}  # ðŸ‘ˆ usa GHCR_TOKEN come nel Makefile
              DOCUMINDS_DATABASE_URL: "postgresql://fake:fake@localhost:5432/fakedb"  # ðŸ‘ˆ valore dummy solo per prisma generate
            run: make dist
    